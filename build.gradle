/*
 * This file was generated by the Gradle 'init' task.
 */

allprojects {
    group = 'com.centime.common'
    version = '1.0-SNAPSHOT'
    description = 'library template project for centime application.'
    //change description specific to the project


}

def downloadFiles = "downloadCommonGradle"
def downloadBuild = project.tasks.create([name: "artefactBuild_$downloadFiles", type: GradleBuild])
downloadBuild.buildFile = project.file("base.gradle")
downloadBuild.tasks = [downloadFiles]
def downloadProjectProperties = downloadBuild.startParameter.projectProperties
def currentProjectProperties = project.gradle.startParameter.projectProperties
downloadProjectProperties << currentProjectProperties


task buildTask (){
    downloadBuild.build()
}


apply from: "${rootDir}/common/artifactory.gradle"
apply from: "${rootDir}/common/libraries.gradle"
apply from: "${rootDir}/common/publishing.gradle"
apply from: "${rootDir}/common/test.gradle"
apply from: "${rootDir}/common/scan.gradle"
apply from: "${rootDir}/common/deployFatJar.gradle"
apply plugin: 'io.spring.dependency-management'



repositories {
        mavenLocal()
	    mavenCentral()
}

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "${artifactory_contextUrl}" + '/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            name = 'centime-maven-virtual-cache'
        }

    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.11.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
        classpath "com.diffplug.spotless:spotless-plugin-gradle:4.5.1"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE"
    }
}

dependencies {

    implementation(libraries.common_lib)
    implementation(libraries.security_lib)
    implementation(libraries.gson)
    testCompile (libraries.junit_jupiter)
    testCompile(libraries.mockito)
    testImplementation(libraries.spring_boot2_test)
    testCompile(libraries.testng)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-devtools:2.4.0'
    //    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

//    testImplementation('org.springframework.boot:spring-boot-starter-test') {
//        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//    }

   // spring web security libraries
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//   implementation 'org.springframework.security:spring-security-config:5.3.0.RELEASE'
//   implementation 'com.okta.spring:okta-spring-boot-starter:1.4.0'
//    testImplementation 'org.springframework.security:spring-security-test'
}
